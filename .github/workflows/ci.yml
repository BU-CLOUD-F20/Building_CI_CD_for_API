name: Continuous Integration Pipeline

on: pull_request

jobs:
  formatting:
    name: Formatting Python Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Importing formatting
        uses: mritunjaysharma394/autoyapf@v2
        with:
          args: --style pep8 --recursive --in-place .
      - name: Checking for modified files
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Pushing changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'  
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated autoyapf fixes"
          git push

  pyTest:
    needs: formatting
    name: Unit Test - PyTest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setting up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Installing Python dependencies from requirements.txt
      uses: py-actions/py-dependency-install@v2
      with:
        path: "./requirements.txt"
    - name: Testing with PyTest
      run: |
        pytest -vv --cov=backend/resources --cov-fail-under=90 -W ignore::DeprecationWarning

  deployForIT:
    needs: pyTest
    name: Deploying Branch to OpenShift for IT
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Setting up OpenShift Actions
          uses: redhat-developer/openshift-actions@v2.1.0
          with:
            version: 'latest'
        - name: Executing OC commands
          run: |
            oc login --token=${{ secrets.OC_API_TOKEN }} --server=${{ secrets.OC_SERVER_URL }}
            oc new-app https://www.github.com/${{ github.repository }}#${{ github.head_ref }} --name=${{ github.head_ref }}

  cleaningOC:
    needs: deployForIT
    name: Cleaning OpenShift Env
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Setting up OpenShift Actions
          uses: redhat-developer/openshift-actions@v2.1.0
          with:
            version: 'latest'
        - name: Executing OpenShift commands
          run: |
            oc login --token=${{ secrets.OC_API_TOKEN }} --server=${{ secrets.OC_SERVER_URL }}
            oc delete all --selector app=${{ github.head_ref }}

#test change